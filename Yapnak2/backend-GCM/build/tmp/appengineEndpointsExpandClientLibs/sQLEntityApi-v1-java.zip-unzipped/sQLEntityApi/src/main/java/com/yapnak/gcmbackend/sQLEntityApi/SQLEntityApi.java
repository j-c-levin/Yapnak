/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-09-17 at 18:49:17 UTC 
 * Modify at your own risk.
 */

package com.yapnak.gcmbackend.sQLEntityApi;

/**
 * Service definition for SQLEntityApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SQLEntityApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class SQLEntityApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the sQLEntityApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://yapnak-app.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "sQLEntityApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public SQLEntityApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  SQLEntityApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "clientLogin".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link ClientLogin#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param password
   * @return the request
   */
  public ClientLogin clientLogin(java.lang.String email, java.lang.String password) throws java.io.IOException {
    ClientLogin result = new ClientLogin(email, password);
    initialize(result);
    return result;
  }

  public class ClientLogin extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity> {

    private static final String REST_PATH = "clientLogin";

    /**
     * Create a request for the method "clientLogin".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link ClientLogin#execute()} method to invoke the remote
     * operation. <p> {@link
     * ClientLogin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param password
     * @since 1.13
     */
    protected ClientLogin(java.lang.String email, java.lang.String password) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public ClientLogin setAlt(java.lang.String alt) {
      return (ClientLogin) super.setAlt(alt);
    }

    @Override
    public ClientLogin setFields(java.lang.String fields) {
      return (ClientLogin) super.setFields(fields);
    }

    @Override
    public ClientLogin setKey(java.lang.String key) {
      return (ClientLogin) super.setKey(key);
    }

    @Override
    public ClientLogin setOauthToken(java.lang.String oauthToken) {
      return (ClientLogin) super.setOauthToken(oauthToken);
    }

    @Override
    public ClientLogin setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ClientLogin) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ClientLogin setQuotaUser(java.lang.String quotaUser) {
      return (ClientLogin) super.setQuotaUser(quotaUser);
    }

    @Override
    public ClientLogin setUserIp(java.lang.String userIp) {
      return (ClientLogin) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ClientLogin setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public ClientLogin setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public ClientLogin set(String parameterName, Object value) {
      return (ClientLogin) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "feedback".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link Feedback#execute()} method to invoke the remote operation.
   *
   * @param message
   * @param type
   * @param userID
   * @return the request
   */
  public Feedback feedback(java.lang.String message, java.lang.Integer type, java.lang.String userID) throws java.io.IOException {
    Feedback result = new Feedback(message, type, userID);
    initialize(result);
    return result;
  }

  public class Feedback extends SQLEntityApiRequest<Void> {

    private static final String REST_PATH = "feedback";

    /**
     * Create a request for the method "feedback".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link Feedback#execute()} method to invoke the remote operation.
     * <p> {@link
     * Feedback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param message
     * @param type
     * @param userID
     * @since 1.13
     */
    protected Feedback(java.lang.String message, java.lang.Integer type, java.lang.String userID) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, Void.class);
      this.message = com.google.api.client.util.Preconditions.checkNotNull(message, "Required parameter message must be specified.");
      this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public Feedback setAlt(java.lang.String alt) {
      return (Feedback) super.setAlt(alt);
    }

    @Override
    public Feedback setFields(java.lang.String fields) {
      return (Feedback) super.setFields(fields);
    }

    @Override
    public Feedback setKey(java.lang.String key) {
      return (Feedback) super.setKey(key);
    }

    @Override
    public Feedback setOauthToken(java.lang.String oauthToken) {
      return (Feedback) super.setOauthToken(oauthToken);
    }

    @Override
    public Feedback setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Feedback) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Feedback setQuotaUser(java.lang.String quotaUser) {
      return (Feedback) super.setQuotaUser(quotaUser);
    }

    @Override
    public Feedback setUserIp(java.lang.String userIp) {
      return (Feedback) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Message")
    private java.lang.String message;

    /**

     */
    public java.lang.String getMessage() {
      return message;
    }

    public Feedback setMessage(java.lang.String message) {
      this.message = message;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer type;

    /**

     */
    public java.lang.Integer getType() {
      return type;
    }

    public Feedback setType(java.lang.Integer type) {
      this.type = type;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public Feedback setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @Override
    public Feedback set(String parameterName, Object value) {
      return (Feedback) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "forgotLogin".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link ForgotLogin#execute()} method to invoke the remote operation.
   *
   * @param email
   * @return the request
   */
  public ForgotLogin forgotLogin(java.lang.String email) throws java.io.IOException {
    ForgotLogin result = new ForgotLogin(email);
    initialize(result);
    return result;
  }

  public class ForgotLogin extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "forgotLogin";

    /**
     * Create a request for the method "forgotLogin".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link ForgotLogin#execute()} method to invoke the remote
     * operation. <p> {@link
     * ForgotLogin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @since 1.13
     */
    protected ForgotLogin(java.lang.String email) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public ForgotLogin setAlt(java.lang.String alt) {
      return (ForgotLogin) super.setAlt(alt);
    }

    @Override
    public ForgotLogin setFields(java.lang.String fields) {
      return (ForgotLogin) super.setFields(fields);
    }

    @Override
    public ForgotLogin setKey(java.lang.String key) {
      return (ForgotLogin) super.setKey(key);
    }

    @Override
    public ForgotLogin setOauthToken(java.lang.String oauthToken) {
      return (ForgotLogin) super.setOauthToken(oauthToken);
    }

    @Override
    public ForgotLogin setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ForgotLogin) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ForgotLogin setQuotaUser(java.lang.String quotaUser) {
      return (ForgotLogin) super.setQuotaUser(quotaUser);
    }

    @Override
    public ForgotLogin setUserIp(java.lang.String userIp) {
      return (ForgotLogin) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ForgotLogin setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @Override
    public ForgotLogin set(String parameterName, Object value) {
      return (ForgotLogin) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllClients".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link GetAllClients#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllClients getAllClients() throws java.io.IOException {
    GetAllClients result = new GetAllClients();
    initialize(result);
    return result;
  }

  public class GetAllClients extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.AllList> {

    private static final String REST_PATH = "getAllClients";

    /**
     * Create a request for the method "getAllClients".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link GetAllClients#execute()} method to invoke the remote
     * operation. <p> {@link GetAllClients#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllClients() {
      super(SQLEntityApi.this, "GET", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.AllList.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAllClients setAlt(java.lang.String alt) {
      return (GetAllClients) super.setAlt(alt);
    }

    @Override
    public GetAllClients setFields(java.lang.String fields) {
      return (GetAllClients) super.setFields(fields);
    }

    @Override
    public GetAllClients setKey(java.lang.String key) {
      return (GetAllClients) super.setKey(key);
    }

    @Override
    public GetAllClients setOauthToken(java.lang.String oauthToken) {
      return (GetAllClients) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllClients setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllClients) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllClients setQuotaUser(java.lang.String quotaUser) {
      return (GetAllClients) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllClients setUserIp(java.lang.String userIp) {
      return (GetAllClients) super.setUserIp(userIp);
    }

    @Override
    public GetAllClients set(String parameterName, Object value) {
      return (GetAllClients) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getClientInfo".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link GetClientInfo#execute()} method to invoke the remote operation.
   *
   * @param email
   * @return the request
   */
  public GetClientInfo getClientInfo(java.lang.String email) throws java.io.IOException {
    GetClientInfo result = new GetClientInfo(email);
    initialize(result);
    return result;
  }

  public class GetClientInfo extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity> {

    private static final String REST_PATH = "getClientInfo";

    /**
     * Create a request for the method "getClientInfo".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link GetClientInfo#execute()} method to invoke the remote
     * operation. <p> {@link GetClientInfo#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param email
     * @since 1.13
     */
    protected GetClientInfo(java.lang.String email) {
      super(SQLEntityApi.this, "GET", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetClientInfo setAlt(java.lang.String alt) {
      return (GetClientInfo) super.setAlt(alt);
    }

    @Override
    public GetClientInfo setFields(java.lang.String fields) {
      return (GetClientInfo) super.setFields(fields);
    }

    @Override
    public GetClientInfo setKey(java.lang.String key) {
      return (GetClientInfo) super.setKey(key);
    }

    @Override
    public GetClientInfo setOauthToken(java.lang.String oauthToken) {
      return (GetClientInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetClientInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetClientInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetClientInfo setQuotaUser(java.lang.String quotaUser) {
      return (GetClientInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetClientInfo setUserIp(java.lang.String userIp) {
      return (GetClientInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public GetClientInfo setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @Override
    public GetClientInfo set(String parameterName, Object value) {
      return (GetClientInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getClients".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link GetClients#execute()} method to invoke the remote operation.
   *
   * @param latitude
   * @param longitude
   * @param userID
   * @return the request
   */
  public GetClients getClients(java.lang.Double latitude, java.lang.Double longitude, java.lang.String userID) throws java.io.IOException {
    GetClients result = new GetClients(latitude, longitude, userID);
    initialize(result);
    return result;
  }

  public class GetClients extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.SQLList> {

    private static final String REST_PATH = "getClients";

    /**
     * Create a request for the method "getClients".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link GetClients#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetClients#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param latitude
     * @param longitude
     * @param userID
     * @since 1.13
     */
    protected GetClients(java.lang.Double latitude, java.lang.Double longitude, java.lang.String userID) {
      super(SQLEntityApi.this, "GET", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.SQLList.class);
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetClients setAlt(java.lang.String alt) {
      return (GetClients) super.setAlt(alt);
    }

    @Override
    public GetClients setFields(java.lang.String fields) {
      return (GetClients) super.setFields(fields);
    }

    @Override
    public GetClients setKey(java.lang.String key) {
      return (GetClients) super.setKey(key);
    }

    @Override
    public GetClients setOauthToken(java.lang.String oauthToken) {
      return (GetClients) super.setOauthToken(oauthToken);
    }

    @Override
    public GetClients setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetClients) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetClients setQuotaUser(java.lang.String quotaUser) {
      return (GetClients) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetClients setUserIp(java.lang.String userIp) {
      return (GetClients) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public GetClients setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public GetClients setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public GetClients setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @Override
    public GetClients set(String parameterName, Object value) {
      return (GetClients) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUser".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
   *
   * @param clientEmail
   * @param userID
   * @return the request
   */
  public GetUser getUser(java.lang.String clientEmail, java.lang.String userID) throws java.io.IOException {
    GetUser result = new GetUser(clientEmail, userID);
    initialize(result);
    return result;
  }

  public class GetUser extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.PointsEntity> {

    private static final String REST_PATH = "getUser";

    /**
     * Create a request for the method "getUser".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientEmail
     * @param userID
     * @since 1.13
     */
    protected GetUser(java.lang.String clientEmail, java.lang.String userID) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.PointsEntity.class);
      this.clientEmail = com.google.api.client.util.Preconditions.checkNotNull(clientEmail, "Required parameter clientEmail must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public GetUser setAlt(java.lang.String alt) {
      return (GetUser) super.setAlt(alt);
    }

    @Override
    public GetUser setFields(java.lang.String fields) {
      return (GetUser) super.setFields(fields);
    }

    @Override
    public GetUser setKey(java.lang.String key) {
      return (GetUser) super.setKey(key);
    }

    @Override
    public GetUser setOauthToken(java.lang.String oauthToken) {
      return (GetUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUser setQuotaUser(java.lang.String quotaUser) {
      return (GetUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUser setUserIp(java.lang.String userIp) {
      return (GetUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String clientEmail;

    /**

     */
    public java.lang.String getClientEmail() {
      return clientEmail;
    }

    public GetUser setClientEmail(java.lang.String clientEmail) {
      this.clientEmail = clientEmail;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public GetUser setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @Override
    public GetUser set(String parameterName, Object value) {
      return (GetUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserDetails".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link GetUserDetails#execute()} method to invoke the remote operation.
   *
   * @param userID
   * @return the request
   */
  public GetUserDetails getUserDetails(java.lang.String userID) throws java.io.IOException {
    GetUserDetails result = new GetUserDetails(userID);
    initialize(result);
    return result;
  }

  public class GetUserDetails extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.UserEntity> {

    private static final String REST_PATH = "getUserDetails";

    /**
     * Create a request for the method "getUserDetails".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link GetUserDetails#execute()} method to invoke the remote
     * operation. <p> {@link GetUserDetails#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param userID
     * @since 1.13
     */
    protected GetUserDetails(java.lang.String userID) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.UserEntity.class);
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public GetUserDetails setAlt(java.lang.String alt) {
      return (GetUserDetails) super.setAlt(alt);
    }

    @Override
    public GetUserDetails setFields(java.lang.String fields) {
      return (GetUserDetails) super.setFields(fields);
    }

    @Override
    public GetUserDetails setKey(java.lang.String key) {
      return (GetUserDetails) super.setKey(key);
    }

    @Override
    public GetUserDetails setOauthToken(java.lang.String oauthToken) {
      return (GetUserDetails) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserDetails setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserDetails) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserDetails setQuotaUser(java.lang.String quotaUser) {
      return (GetUserDetails) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserDetails setUserIp(java.lang.String userIp) {
      return (GetUserDetails) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public GetUserDetails setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @Override
    public GetUserDetails set(String parameterName, Object value) {
      return (GetUserDetails) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertOffer".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link InsertOffer#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param offer
   * @param text
   * @return the request
   */
  public InsertOffer insertOffer(java.lang.String email, java.lang.Integer offer, java.lang.String text) throws java.io.IOException {
    InsertOffer result = new InsertOffer(email, offer, text);
    initialize(result);
    return result;
  }

  public class InsertOffer extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "insertOffer";

    /**
     * Create a request for the method "insertOffer".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link InsertOffer#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param offer
     * @param text
     * @since 1.13
     */
    protected InsertOffer(java.lang.String email, java.lang.Integer offer, java.lang.String text) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.offer = com.google.api.client.util.Preconditions.checkNotNull(offer, "Required parameter offer must be specified.");
      this.text = com.google.api.client.util.Preconditions.checkNotNull(text, "Required parameter text must be specified.");
    }

    @Override
    public InsertOffer setAlt(java.lang.String alt) {
      return (InsertOffer) super.setAlt(alt);
    }

    @Override
    public InsertOffer setFields(java.lang.String fields) {
      return (InsertOffer) super.setFields(fields);
    }

    @Override
    public InsertOffer setKey(java.lang.String key) {
      return (InsertOffer) super.setKey(key);
    }

    @Override
    public InsertOffer setOauthToken(java.lang.String oauthToken) {
      return (InsertOffer) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertOffer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertOffer setQuotaUser(java.lang.String quotaUser) {
      return (InsertOffer) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertOffer setUserIp(java.lang.String userIp) {
      return (InsertOffer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public InsertOffer setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offer;

    /**

     */
    public java.lang.Integer getOffer() {
      return offer;
    }

    public InsertOffer setOffer(java.lang.Integer offer) {
      this.offer = offer;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String text;

    /**

     */
    public java.lang.String getText() {
      return text;
    }

    public InsertOffer setText(java.lang.String text) {
      this.text = text;
      return this;
    }

    @Override
    public InsertOffer set(String parameterName, Object value) {
      return (InsertOffer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUser".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link InsertUser#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param password
   * @return the request
   */
  public InsertUser insertUser(java.lang.String email, java.lang.String password) throws java.io.IOException {
    InsertUser result = new InsertUser(email, password);
    initialize(result);
    return result;
  }

  public class InsertUser extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.UserEntity> {

    private static final String REST_PATH = "insertUser";

    /**
     * Create a request for the method "insertUser".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param password
     * @since 1.13
     */
    protected InsertUser(java.lang.String email, java.lang.String password) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.UserEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public InsertUser setAlt(java.lang.String alt) {
      return (InsertUser) super.setAlt(alt);
    }

    @Override
    public InsertUser setFields(java.lang.String fields) {
      return (InsertUser) super.setFields(fields);
    }

    @Override
    public InsertUser setKey(java.lang.String key) {
      return (InsertUser) super.setKey(key);
    }

    @Override
    public InsertUser setOauthToken(java.lang.String oauthToken) {
      return (InsertUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUser setUserIp(java.lang.String userIp) {
      return (InsertUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public InsertUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public InsertUser setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public InsertUser set(String parameterName, Object value) {
      return (InsertUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "qrSubmit".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link QrSubmit#execute()} method to invoke the remote operation.
   *
   * @param clientID
   * @param datetime
   * @param hash
   * @param userID
   * @return the request
   */
  public QrSubmit qrSubmit(java.lang.Integer clientID, java.lang.String datetime, java.lang.String hash, java.lang.String userID) throws java.io.IOException {
    QrSubmit result = new QrSubmit(clientID, datetime, hash, userID);
    initialize(result);
    return result;
  }

  public class QrSubmit extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.QrEntity> {

    private static final String REST_PATH = "qrSubmit";

    /**
     * Create a request for the method "qrSubmit".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link QrSubmit#execute()} method to invoke the remote operation.
     * <p> {@link
     * QrSubmit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param clientID
     * @param datetime
     * @param hash
     * @param userID
     * @since 1.13
     */
    protected QrSubmit(java.lang.Integer clientID, java.lang.String datetime, java.lang.String hash, java.lang.String userID) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.QrEntity.class);
      this.clientID = com.google.api.client.util.Preconditions.checkNotNull(clientID, "Required parameter clientID must be specified.");
      this.datetime = com.google.api.client.util.Preconditions.checkNotNull(datetime, "Required parameter datetime must be specified.");
      this.hash = com.google.api.client.util.Preconditions.checkNotNull(hash, "Required parameter hash must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public QrSubmit setAlt(java.lang.String alt) {
      return (QrSubmit) super.setAlt(alt);
    }

    @Override
    public QrSubmit setFields(java.lang.String fields) {
      return (QrSubmit) super.setFields(fields);
    }

    @Override
    public QrSubmit setKey(java.lang.String key) {
      return (QrSubmit) super.setKey(key);
    }

    @Override
    public QrSubmit setOauthToken(java.lang.String oauthToken) {
      return (QrSubmit) super.setOauthToken(oauthToken);
    }

    @Override
    public QrSubmit setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (QrSubmit) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public QrSubmit setQuotaUser(java.lang.String quotaUser) {
      return (QrSubmit) super.setQuotaUser(quotaUser);
    }

    @Override
    public QrSubmit setUserIp(java.lang.String userIp) {
      return (QrSubmit) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer clientID;

    /**

     */
    public java.lang.Integer getClientID() {
      return clientID;
    }

    public QrSubmit setClientID(java.lang.Integer clientID) {
      this.clientID = clientID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String datetime;

    /**

     */
    public java.lang.String getDatetime() {
      return datetime;
    }

    public QrSubmit setDatetime(java.lang.String datetime) {
      this.datetime = datetime;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String hash;

    /**

     */
    public java.lang.String getHash() {
      return hash;
    }

    public QrSubmit setHash(java.lang.String hash) {
      this.hash = hash;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public QrSubmit setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @Override
    public QrSubmit set(String parameterName, Object value) {
      return (QrSubmit) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "resetPassword".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link ResetPassword#execute()} method to invoke the remote operation.
   *
   * @param hash
   * @param password
   * @return the request
   */
  public ResetPassword resetPassword(java.lang.String hash, java.lang.String password) throws java.io.IOException {
    ResetPassword result = new ResetPassword(hash, password);
    initialize(result);
    return result;
  }

  public class ResetPassword extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "resetPassword";

    /**
     * Create a request for the method "resetPassword".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link ResetPassword#execute()} method to invoke the remote
     * operation. <p> {@link ResetPassword#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param hash
     * @param password
     * @since 1.13
     */
    protected ResetPassword(java.lang.String hash, java.lang.String password) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.hash = com.google.api.client.util.Preconditions.checkNotNull(hash, "Required parameter hash must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public ResetPassword setAlt(java.lang.String alt) {
      return (ResetPassword) super.setAlt(alt);
    }

    @Override
    public ResetPassword setFields(java.lang.String fields) {
      return (ResetPassword) super.setFields(fields);
    }

    @Override
    public ResetPassword setKey(java.lang.String key) {
      return (ResetPassword) super.setKey(key);
    }

    @Override
    public ResetPassword setOauthToken(java.lang.String oauthToken) {
      return (ResetPassword) super.setOauthToken(oauthToken);
    }

    @Override
    public ResetPassword setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ResetPassword) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ResetPassword setQuotaUser(java.lang.String quotaUser) {
      return (ResetPassword) super.setQuotaUser(quotaUser);
    }

    @Override
    public ResetPassword setUserIp(java.lang.String userIp) {
      return (ResetPassword) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String hash;

    /**

     */
    public java.lang.String getHash() {
      return hash;
    }

    public ResetPassword setHash(java.lang.String hash) {
      this.hash = hash;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public ResetPassword setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public ResetPassword set(String parameterName, Object value) {
      return (ResetPassword) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "searchUsers".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link SearchUsers#execute()} method to invoke the remote operation.
   *
   * @param details
   * @return the request
   */
  public SearchUsers searchUsers(java.util.List<java.lang.String> details) throws java.io.IOException {
    SearchUsers result = new SearchUsers(details);
    initialize(result);
    return result;
  }

  public class SearchUsers extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.SearchUserEntity> {

    private static final String REST_PATH = "searchUsers";

    /**
     * Create a request for the method "searchUsers".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link SearchUsers#execute()} method to invoke the remote
     * operation. <p> {@link
     * SearchUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param details
     * @since 1.13
     */
    protected SearchUsers(java.util.List<java.lang.String> details) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.SearchUserEntity.class);
      this.details = com.google.api.client.util.Preconditions.checkNotNull(details, "Required parameter details must be specified.");
    }

    @Override
    public SearchUsers setAlt(java.lang.String alt) {
      return (SearchUsers) super.setAlt(alt);
    }

    @Override
    public SearchUsers setFields(java.lang.String fields) {
      return (SearchUsers) super.setFields(fields);
    }

    @Override
    public SearchUsers setKey(java.lang.String key) {
      return (SearchUsers) super.setKey(key);
    }

    @Override
    public SearchUsers setOauthToken(java.lang.String oauthToken) {
      return (SearchUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public SearchUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SearchUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SearchUsers setQuotaUser(java.lang.String quotaUser) {
      return (SearchUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public SearchUsers setUserIp(java.lang.String userIp) {
      return (SearchUsers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> details;

    /**

     */
    public java.util.List<java.lang.String> getDetails() {
      return details;
    }

    public SearchUsers setDetails(java.util.List<java.lang.String> details) {
      this.details = details;
      return this;
    }

    @Override
    public SearchUsers set(String parameterName, Object value) {
      return (SearchUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "setUserDetails".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link SetUserDetails#execute()} method to invoke the remote operation.
   *
   * @param fName
   * @param lName
   * @param number
   * @param userID
   * @return the request
   */
  public SetUserDetails setUserDetails(java.lang.String fName, java.lang.String lName, java.lang.String number, java.lang.String userID) throws java.io.IOException {
    SetUserDetails result = new SetUserDetails(fName, lName, number, userID);
    initialize(result);
    return result;
  }

  public class SetUserDetails extends SQLEntityApiRequest<Void> {

    private static final String REST_PATH = "setUserDetails";

    /**
     * Create a request for the method "setUserDetails".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link SetUserDetails#execute()} method to invoke the remote
     * operation. <p> {@link SetUserDetails#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param fName
     * @param lName
     * @param number
     * @param userID
     * @since 1.13
     */
    protected SetUserDetails(java.lang.String fName, java.lang.String lName, java.lang.String number, java.lang.String userID) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, Void.class);
      this.fName = com.google.api.client.util.Preconditions.checkNotNull(fName, "Required parameter fName must be specified.");
      this.lName = com.google.api.client.util.Preconditions.checkNotNull(lName, "Required parameter lName must be specified.");
      this.number = com.google.api.client.util.Preconditions.checkNotNull(number, "Required parameter number must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public SetUserDetails setAlt(java.lang.String alt) {
      return (SetUserDetails) super.setAlt(alt);
    }

    @Override
    public SetUserDetails setFields(java.lang.String fields) {
      return (SetUserDetails) super.setFields(fields);
    }

    @Override
    public SetUserDetails setKey(java.lang.String key) {
      return (SetUserDetails) super.setKey(key);
    }

    @Override
    public SetUserDetails setOauthToken(java.lang.String oauthToken) {
      return (SetUserDetails) super.setOauthToken(oauthToken);
    }

    @Override
    public SetUserDetails setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SetUserDetails) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SetUserDetails setQuotaUser(java.lang.String quotaUser) {
      return (SetUserDetails) super.setQuotaUser(quotaUser);
    }

    @Override
    public SetUserDetails setUserIp(java.lang.String userIp) {
      return (SetUserDetails) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String fName;

    /**

     */
    public java.lang.String getFName() {
      return fName;
    }

    public SetUserDetails setFName(java.lang.String fName) {
      this.fName = fName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String lName;

    /**

     */
    public java.lang.String getLName() {
      return lName;
    }

    public SetUserDetails setLName(java.lang.String lName) {
      this.lName = lName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String number;

    /**

     */
    public java.lang.String getNumber() {
      return number;
    }

    public SetUserDetails setNumber(java.lang.String number) {
      this.number = number;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public SetUserDetails setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @Override
    public SetUserDetails set(String parameterName, Object value) {
      return (SetUserDetails) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "toggleOffer".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link ToggleOffer#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param offer
   * @param value
   * @return the request
   */
  public ToggleOffer toggleOffer(java.lang.String email, java.lang.Integer offer, java.lang.Integer value) throws java.io.IOException {
    ToggleOffer result = new ToggleOffer(email, offer, value);
    initialize(result);
    return result;
  }

  public class ToggleOffer extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "toggleOffer";

    /**
     * Create a request for the method "toggleOffer".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link ToggleOffer#execute()} method to invoke the remote
     * operation. <p> {@link
     * ToggleOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param offer
     * @param value
     * @since 1.13
     */
    protected ToggleOffer(java.lang.String email, java.lang.Integer offer, java.lang.Integer value) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.offer = com.google.api.client.util.Preconditions.checkNotNull(offer, "Required parameter offer must be specified.");
      this.value = com.google.api.client.util.Preconditions.checkNotNull(value, "Required parameter value must be specified.");
    }

    @Override
    public ToggleOffer setAlt(java.lang.String alt) {
      return (ToggleOffer) super.setAlt(alt);
    }

    @Override
    public ToggleOffer setFields(java.lang.String fields) {
      return (ToggleOffer) super.setFields(fields);
    }

    @Override
    public ToggleOffer setKey(java.lang.String key) {
      return (ToggleOffer) super.setKey(key);
    }

    @Override
    public ToggleOffer setOauthToken(java.lang.String oauthToken) {
      return (ToggleOffer) super.setOauthToken(oauthToken);
    }

    @Override
    public ToggleOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ToggleOffer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ToggleOffer setQuotaUser(java.lang.String quotaUser) {
      return (ToggleOffer) super.setQuotaUser(quotaUser);
    }

    @Override
    public ToggleOffer setUserIp(java.lang.String userIp) {
      return (ToggleOffer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ToggleOffer setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offer;

    /**

     */
    public java.lang.Integer getOffer() {
      return offer;
    }

    public ToggleOffer setOffer(java.lang.Integer offer) {
      this.offer = offer;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer value;

    /**

     */
    public java.lang.Integer getValue() {
      return value;
    }

    public ToggleOffer setValue(java.lang.Integer value) {
      this.value = value;
      return this;
    }

    @Override
    public ToggleOffer set(String parameterName, Object value) {
      return (ToggleOffer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateClientLocation".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link UpdateClientLocation#execute()} method to invoke the remote
   * operation.
   *
   * @param address
   * @param email
   * @return the request
   */
  public UpdateClientLocation updateClientLocation(java.lang.String address, java.lang.String email) throws java.io.IOException {
    UpdateClientLocation result = new UpdateClientLocation(address, email);
    initialize(result);
    return result;
  }

  public class UpdateClientLocation extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "updateClientLocation";

    /**
     * Create a request for the method "updateClientLocation".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link UpdateClientLocation#execute()} method to invoke the
     * remote operation. <p> {@link UpdateClientLocation#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param address
     * @param email
     * @since 1.13
     */
    protected UpdateClientLocation(java.lang.String address, java.lang.String email) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.address = com.google.api.client.util.Preconditions.checkNotNull(address, "Required parameter address must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public UpdateClientLocation setAlt(java.lang.String alt) {
      return (UpdateClientLocation) super.setAlt(alt);
    }

    @Override
    public UpdateClientLocation setFields(java.lang.String fields) {
      return (UpdateClientLocation) super.setFields(fields);
    }

    @Override
    public UpdateClientLocation setKey(java.lang.String key) {
      return (UpdateClientLocation) super.setKey(key);
    }

    @Override
    public UpdateClientLocation setOauthToken(java.lang.String oauthToken) {
      return (UpdateClientLocation) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateClientLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateClientLocation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateClientLocation setQuotaUser(java.lang.String quotaUser) {
      return (UpdateClientLocation) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateClientLocation setUserIp(java.lang.String userIp) {
      return (UpdateClientLocation) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String address;

    /**

     */
    public java.lang.String getAddress() {
      return address;
    }

    public UpdateClientLocation setAddress(java.lang.String address) {
      this.address = address;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateClientLocation setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @Override
    public UpdateClientLocation set(String parameterName, Object value) {
      return (UpdateClientLocation) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateClientName".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link UpdateClientName#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param name
   * @return the request
   */
  public UpdateClientName updateClientName(java.lang.String email, java.lang.String name) throws java.io.IOException {
    UpdateClientName result = new UpdateClientName(email, name);
    initialize(result);
    return result;
  }

  public class UpdateClientName extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity> {

    private static final String REST_PATH = "updateClientName";

    /**
     * Create a request for the method "updateClientName".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link UpdateClientName#execute()} method to invoke the remote
     * operation. <p> {@link UpdateClientName#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param email
     * @param name
     * @since 1.13
     */
    protected UpdateClientName(java.lang.String email, java.lang.String name) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public UpdateClientName setAlt(java.lang.String alt) {
      return (UpdateClientName) super.setAlt(alt);
    }

    @Override
    public UpdateClientName setFields(java.lang.String fields) {
      return (UpdateClientName) super.setFields(fields);
    }

    @Override
    public UpdateClientName setKey(java.lang.String key) {
      return (UpdateClientName) super.setKey(key);
    }

    @Override
    public UpdateClientName setOauthToken(java.lang.String oauthToken) {
      return (UpdateClientName) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateClientName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateClientName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateClientName setQuotaUser(java.lang.String quotaUser) {
      return (UpdateClientName) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateClientName setUserIp(java.lang.String userIp) {
      return (UpdateClientName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateClientName setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public UpdateClientName setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public UpdateClientName set(String parameterName, Object value) {
      return (UpdateClientName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateClientType".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link UpdateClientType#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param type
   * @return the request
   */
  public UpdateClientType updateClientType(java.lang.String email, java.lang.String type) throws java.io.IOException {
    UpdateClientType result = new UpdateClientType(email, type);
    initialize(result);
    return result;
  }

  public class UpdateClientType extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity> {

    private static final String REST_PATH = "updateClientType";

    /**
     * Create a request for the method "updateClientType".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link UpdateClientType#execute()} method to invoke the remote
     * operation. <p> {@link UpdateClientType#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param email
     * @param type
     * @since 1.13
     */
    protected UpdateClientType(java.lang.String email, java.lang.String type) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.ClientEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
    }

    @Override
    public UpdateClientType setAlt(java.lang.String alt) {
      return (UpdateClientType) super.setAlt(alt);
    }

    @Override
    public UpdateClientType setFields(java.lang.String fields) {
      return (UpdateClientType) super.setFields(fields);
    }

    @Override
    public UpdateClientType setKey(java.lang.String key) {
      return (UpdateClientType) super.setKey(key);
    }

    @Override
    public UpdateClientType setOauthToken(java.lang.String oauthToken) {
      return (UpdateClientType) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateClientType setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateClientType) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateClientType setQuotaUser(java.lang.String quotaUser) {
      return (UpdateClientType) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateClientType setUserIp(java.lang.String userIp) {
      return (UpdateClientType) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateClientType setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String type;

    /**

     */
    public java.lang.String getType() {
      return type;
    }

    public UpdateClientType setType(java.lang.String type) {
      this.type = type;
      return this;
    }

    @Override
    public UpdateClientType set(String parameterName, Object value) {
      return (UpdateClientType) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateOffer".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link UpdateOffer#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param offer
   * @param text
   * @return the request
   */
  public UpdateOffer updateOffer(java.lang.String email, java.lang.Integer offer, java.lang.String text) throws java.io.IOException {
    UpdateOffer result = new UpdateOffer(email, offer, text);
    initialize(result);
    return result;
  }

  public class UpdateOffer extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "updateOffer";

    /**
     * Create a request for the method "updateOffer".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link UpdateOffer#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param offer
     * @param text
     * @since 1.13
     */
    protected UpdateOffer(java.lang.String email, java.lang.Integer offer, java.lang.String text) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.offer = com.google.api.client.util.Preconditions.checkNotNull(offer, "Required parameter offer must be specified.");
      this.text = com.google.api.client.util.Preconditions.checkNotNull(text, "Required parameter text must be specified.");
    }

    @Override
    public UpdateOffer setAlt(java.lang.String alt) {
      return (UpdateOffer) super.setAlt(alt);
    }

    @Override
    public UpdateOffer setFields(java.lang.String fields) {
      return (UpdateOffer) super.setFields(fields);
    }

    @Override
    public UpdateOffer setKey(java.lang.String key) {
      return (UpdateOffer) super.setKey(key);
    }

    @Override
    public UpdateOffer setOauthToken(java.lang.String oauthToken) {
      return (UpdateOffer) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateOffer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateOffer setQuotaUser(java.lang.String quotaUser) {
      return (UpdateOffer) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateOffer setUserIp(java.lang.String userIp) {
      return (UpdateOffer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateOffer setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offer;

    /**

     */
    public java.lang.Integer getOffer() {
      return offer;
    }

    public UpdateOffer setOffer(java.lang.Integer offer) {
      this.offer = offer;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String text;

    /**

     */
    public java.lang.String getText() {
      return text;
    }

    public UpdateOffer setText(java.lang.String text) {
      this.text = text;
      return this;
    }

    @Override
    public UpdateOffer set(String parameterName, Object value) {
      return (UpdateOffer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "userFeedback".
   *
   * This request holds the parameters needed by the sQLEntityApi server.  After setting any optional
   * parameters, call the {@link UserFeedback#execute()} method to invoke the remote operation.
   *
   * @param isAccepted
   * @param offerID
   * @param rating
   * @param userID
   * @return the request
   */
  public UserFeedback userFeedback(java.lang.Integer isAccepted, java.lang.Integer offerID, java.lang.Double rating, java.lang.String userID) throws java.io.IOException {
    UserFeedback result = new UserFeedback(isAccepted, offerID, rating, userID);
    initialize(result);
    return result;
  }

  public class UserFeedback extends SQLEntityApiRequest<com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity> {

    private static final String REST_PATH = "userFeedback";

    /**
     * Create a request for the method "userFeedback".
     *
     * This request holds the parameters needed by the the sQLEntityApi server.  After setting any
     * optional parameters, call the {@link UserFeedback#execute()} method to invoke the remote
     * operation. <p> {@link
     * UserFeedback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param isAccepted
     * @param offerID
     * @param rating
     * @param userID
     * @since 1.13
     */
    protected UserFeedback(java.lang.Integer isAccepted, java.lang.Integer offerID, java.lang.Double rating, java.lang.String userID) {
      super(SQLEntityApi.this, "POST", REST_PATH, null, com.yapnak.gcmbackend.sQLEntityApi.model.VoidEntity.class);
      this.isAccepted = com.google.api.client.util.Preconditions.checkNotNull(isAccepted, "Required parameter isAccepted must be specified.");
      this.offerID = com.google.api.client.util.Preconditions.checkNotNull(offerID, "Required parameter offerID must be specified.");
      this.rating = com.google.api.client.util.Preconditions.checkNotNull(rating, "Required parameter rating must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
    }

    @Override
    public UserFeedback setAlt(java.lang.String alt) {
      return (UserFeedback) super.setAlt(alt);
    }

    @Override
    public UserFeedback setFields(java.lang.String fields) {
      return (UserFeedback) super.setFields(fields);
    }

    @Override
    public UserFeedback setKey(java.lang.String key) {
      return (UserFeedback) super.setKey(key);
    }

    @Override
    public UserFeedback setOauthToken(java.lang.String oauthToken) {
      return (UserFeedback) super.setOauthToken(oauthToken);
    }

    @Override
    public UserFeedback setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UserFeedback) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UserFeedback setQuotaUser(java.lang.String quotaUser) {
      return (UserFeedback) super.setQuotaUser(quotaUser);
    }

    @Override
    public UserFeedback setUserIp(java.lang.String userIp) {
      return (UserFeedback) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer isAccepted;

    /**

     */
    public java.lang.Integer getIsAccepted() {
      return isAccepted;
    }

    public UserFeedback setIsAccepted(java.lang.Integer isAccepted) {
      this.isAccepted = isAccepted;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offerID;

    /**

     */
    public java.lang.Integer getOfferID() {
      return offerID;
    }

    public UserFeedback setOfferID(java.lang.Integer offerID) {
      this.offerID = offerID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double rating;

    /**

     */
    public java.lang.Double getRating() {
      return rating;
    }

    public UserFeedback setRating(java.lang.Double rating) {
      this.rating = rating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public UserFeedback setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String message;

    /**

     */
    public java.lang.String getMessage() {
      return message;
    }

    public UserFeedback setMessage(java.lang.String message) {
      this.message = message;
      return this;
    }

    @Override
    public UserFeedback set(String parameterName, Object value) {
      return (UserFeedback) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link SQLEntityApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link SQLEntityApi}. */
    @Override
    public SQLEntityApi build() {
      return new SQLEntityApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SQLEntityApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSQLEntityApiRequestInitializer(
        SQLEntityApiRequestInitializer sqlentityapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(sqlentityapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
